{"version":3,"sources":["Pages/NavPage.tsx","App.tsx","Pages/HomePage.tsx","Pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","PeopleContext.tsx","components/PersonLink/PersonLink.tsx","components/PeopleItem/PeopleItem.tsx","components/PeopleList/PeopleList.tsx","Pages/PeoplePage.tsx","Root..tsx","index.tsx"],"names":["getLinckClass","isActive","classNames","NavPage","className","role","to","App","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","persons","setPersons","PeopleProvider","children","useState","value","useMemo","Provider","PersonLink","person","slug","name","sex","PeopleItem","motherName","fatherName","born","died","personSlug","useParams","useContext","findPersonByName","find","p","mother","father","renderParentLink","parent","parentName","undefined","cn","PeopleList","map","PeoplePage","errorMessage","setErrorMessage","loading","setLoading","useEffect","finally","catch","length","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7565b57f.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinckClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavPage = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinckClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinckClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavPage } from './Pages/NavPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavPage />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useState, useMemo } from 'react';\nimport { Person } from './types';\nimport { PeopleContextType } from './types/PeopleContextType';\n\nexport const PeopleContext = React.createContext<PeopleContextType>({\n  persons: [],\n  setPersons: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [persons, setPersons] = useState<Person[]>([]);\n\n  const value = useMemo(() => ({\n    persons,\n    setPersons,\n  }), [persons]);\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person | undefined;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return null;\n  }\n\n  const { slug, name, sex } = person;\n\n  return (\n    <>\n      {sex === 'm' ? (\n        <Link to={`/people/${slug}`}>\n          {name}\n        </Link>\n      ) : (\n        <Link\n          className=\"has-text-danger\"\n          to={`/people/${slug}`}\n        >\n          {name}\n        </Link>\n      )}\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { PeopleContext } from '../../PeopleContext';\n\ninterface Props {\n  person: Person\n}\n\nexport const PeopleItem: React.FC<Props> = ({ person }) => {\n  const {\n    motherName, sex, fatherName, slug, born, died,\n  } = person;\n\n  const { personSlug } = useParams();\n  const { persons } = useContext(PeopleContext);\n\n  const findPersonByName = (name: string): Person | undefined => {\n    return persons.find((p) => p.name === name);\n  };\n\n  const mother = findPersonByName(motherName ?? '');\n  const father = findPersonByName(fatherName ?? '');\n\n  const renderParentLink = (parent: Person | undefined, parentName: string) => {\n    return parent !== undefined ? <PersonLink person={parent} /> : parentName;\n  };\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>{motherName && renderParentLink(mother, motherName)}</td>\n      <td>{fatherName && renderParentLink(father, fatherName)}</td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { PeopleContext } from '../../PeopleContext';\nimport { PeopleItem } from '../PeopleItem/PeopleItem';\n\nexport const PeopleList: React.FC = () => {\n  const { persons } = useContext(PeopleContext);\n\n  return (\n    <tbody>\n      {persons.map((person) => (\n        <PeopleItem person={person} key={person.slug} />\n      ))}\n    </tbody>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { PeopleContext } from '../PeopleContext';\nimport { PeopleList } from '../components/PeopleList';\n\nexport const PeoplePage: React.FC = () => {\n  const { persons, setPersons } = useContext(PeopleContext);\n\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(setPersons)\n      .finally(() => {\n        setLoading(false);\n        setErrorMessage('');\n      })\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        People Page\n      </h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <PeopleList />\n            </table>\n          )}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {persons.length === 0 && !loading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { PeopleProvider } from './PeopleContext';\n\nexport const Root = () => (\n  <HashRouter>\n    <PeopleProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </PeopleProvider>\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root.';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}