{"version":3,"sources":["Pages/NavPage.tsx","App.tsx","Pages/HomePage.tsx","Pages/ErrorPage.tsx","components/Loader/Loader.tsx","api.ts","Pages/PeoplePage.tsx","Root..tsx","index.tsx"],"names":["getLinckClass","isActive","classNames","NavPage","className","role","to","App","HomePage","ErrorPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","persons","setPersons","errorMessage","setErrorMessage","loading","setLoading","personSlug","useParams","useEffect","person","catch","finally","map","cn","slug","name","sex","born","died","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02535aaa.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinckClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavPage = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinckClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinckClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavPage } from './Pages/NavPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavPage />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">\n      Home page\n    </h1>\n  );\n};\n","export const ErrorPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(person => {\n        setPersons(person);\n      })\n      .catch(() => {\n        setErrorMessage('There are no people on the server');\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 3000);\n      })\n      .finally(() => setLoading(false));\n  });\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {!loading ? (\n          <Loader />\n        ) : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {persons.map((person) => (\n                <tr\n                  key={person.slug}\n                  data-cy=\"person\"\n                  className={cn({\n                    'has-background-warning': person.slug === personSlug,\n                  })}\n                >\n                  <td>\n                    <Link\n                      to={`#/people/${person.slug}`}\n                    >\n                      {person.name}\n                    </Link>\n                  </td>\n\n                  <td>\n                    {person.sex}\n                  </td>\n\n                  <td>\n                    {person.born}\n                  </td>\n\n                  <td>\n                    {person.died}\n                  </td>\n\n                  <td>\n                    -\n                    {/* <a\n                      className=\"has-text-danger\"\n                      href={`#/people/${person.motherSlug}`} // Note the change here\n                    >\n                      {person.motherName ? `${person.motherName}` : '-'}\n                    </a> */}\n                  </td>\n\n                  <td>\n                    {/* <a href={`#/people/${person.fatherSlug}`}> // Note the change here\n                      {person.fatherName ? `${person.fatherName}` : '-'}\n                    </a> */}\n                    -\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n\n        <p data-cy=\"noPeopleMessage\">\n          {errorMessage}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './Pages/HomePage';\nimport { ErrorPage } from './Pages/ErrorPage';\nimport { PeoplePage } from './Pages/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root.';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}